李澈总结：
判断遍历类型
1是前中后序遍历吗，是的话就用3序遍历的
3种方法来做（递归，栈，分治三种方法）

2是层序遍历吗，是的话就bfs，用queue

3是左右判断吗，是的话就分治法，但是又要分一下，是找点还是改点。找点left = self. helper，改点就root.left = self. helper

4是递归回溯法，是的话就dfs

5硬解



Tree:
Full Binary Tree: every node has 0 or 2 children. 
Complete Binary Tree: all the levels are completely filled except possibly the last level and the last level has all keys as left as possible (只有最下面的两层结点度小于2，并且最下面一层的结点都集中在该层最左边的若干位置的二叉树。)
Perfect Binary Tree: all the internal nodes have two children and all leaf nodes are at the same level. (除了叶结点外每一个结点都有左右子叶且叶结点都处在最底层的二叉树)
Balanced Binary Tree (AVL): the height of the tree is O(Log n) where n is the number of nodes. (它是一棵空树或它的左右两个子树的高度差的绝对值不超过1)



Recursion在Tree题目的基本应用分为两类

1. 把value从上往下传递, 然后从下往上 eg. isValidBST
2. 只把value从下往上传递 （更为常见）
    1. GetHeight，把int从下往上传
    2. isBalancedTree， 把bool从下往上传
    3. isSymmetric，把bool 从下往上传
3.  只把value从上往下传，改变global variable的值



###
Iterative Version必背题目：94，144
